/**
 * Â© 2025 Melvin Jones Repol & its contributors . All rights reserved.
 * This project is licensed under the MIT License with Commons Clause.
*/
import{C as t}from"./CjF8hZvU.js";import{e}from"./BaSvJWxd.js";import{j as s,m as i,c as n,p as r}from"./BF0CFBFR.js";import{C as a,a as o,b as h}from"./BFJGQN3Z.js";import{C as u}from"./C1VrLA7Q.js";import{m as l}from"./BwL-KKwD.js";import{d as c}from"./ZVtpMJXJ.js";import{j as d}from"./CmmEp43d.js";const f=(t,e=[],s)=>{let i=t;"string"==typeof e&&(e=e.split("."));for(const n of e){if(!i||!i[n])return s;i=i[n]}return i},_=f,y=(t,e=[],s)=>{let i,n,r=t;for(i of e)n=r,"[object Object]"!==toString.call(r[i])&&(r[i]={}),r=r[i];return n[i]=s,t},p=(t,e=[])=>Object.keys(t).filter((t=>!~e.indexOf(t))).reduce(((e,s)=>(s in t&&(e[s]=t[s]),e)),{}),m=(...t)=>c.all(t),g=function(){const t={};return"sunday|monday|tuesday|wednesday|thursday|friday|saturday".split("|").forEach(((e,s)=>{t[e]=s,t[s]=e})),t}();function b(t){return"object"==typeof(s=t)&&null!==s&&"[object Date]"===(e=t,Object.prototype.toString.call(e));var e,s}function v(t){const e=parseInt(t,10);if(!isNaN(e))return e}function w(t,e){const s=/^(\d{4})(?:-(\d{2})(?:-(\d{2}))?)?.*$/.exec((t||"").toString());if(s){s.shift();const[t,e,i]=s.map((t=>parseInt(t||1,10)));return new Date(t,e-1,i)}}class k{constructor(t,e,s,i){this.opts=k.splitName(e,s,i)||{},this.data=t||{}}getCountries(t){const e={},s=_(this.data,"holidays",{});return Object.keys(s).forEach((i=>{e[i]=this._name(s,i,t,{country:i})})),e}getStates(t,e){const s=Object.assign({},k.splitName(t)),i=_(this.data,["holidays",s.country,"states"])||_(this.data,["holidays",s.country,"regions"]);if(i){const t={};return Object.keys(i).forEach((n=>{s.state=n,t[n]=this._name(i,n,e,s)})),t}}getRegions(t,e,s){const i=Object.assign({},k.splitName(t,e)),n=_(this.data,["holidays",i.country,"states",i.state,"regions"]);if(n){const t={};return Object.keys(n).forEach((e=>{i.region=e,t[e]=this._name(n,e,s,i)})),t}}_name(t,e,s,i){const n=t[e].names,r=s||this.getLanguages(i)[0]||Object.keys(n)[0],a=k.majorLang(r);return t[e].name||n[r]||n[a]||n[Object.keys(n)[0]]}getLanguages(t){return this._getValue("langs",t)||[]}getDayOff(){return this._getValue("dayoff")}getTimezones(){return this._getValue("zones")||[]}getRules(t,e,s){const i={},n=k.splitName(t,e,s)||this.opts;if(!n||!n.country)return i;t=n.country.toUpperCase(),e=n.state,s=n.region;let r=_(this.data,["holidays",t]);return r&&(this._assign(i,r),(e&&r.regions&&(r=r.regions[e])||e&&r.states&&(r=r.states[e]))&&(this._assign(i,r),s&&r.regions&&(r=r.regions[s])&&this._assign(i,r)),Object.keys(i).forEach((t=>{const e=i[t]._name;e&&this.data.names[e]&&(delete i[t]._name,i[t]=m({},this.data.names[e],i[t]))}))),i}getSubstitueNames(){return _(this.data,["names","substitutes","name"])}_assign(t,e){let s={};if(e._days){const t=["holidays"].concat(e._days,"days"),i=_(this.data,t);if(!i)throw new Error("unknown path for _days: "+t.join("."));s=Object.assign({},i)}return(s||e.days)&&(s=Object.assign(s,e.days),Object.keys(s).forEach((function(e){!1!==s[e]?(t[e]=Object.assign({},t[e],s[e]),s[e].type||(t[e].type="public")):t[e]&&delete t[e]}))),t}_getValue(t,e=this.opts){return _(this.data,["holidays",e.country,"states",e.state,"regions",e.regions,t])||_(this.data,["holidays",e.country,"states",e.state,t])||_(this.data,["holidays",e.country,t])}}function j(t){return["country","state","region"].forEach((e=>{"string"==typeof t[e]&&(t[e]=t[e].toUpperCase())})),t}k.splitName=function(t,e,s){if("object"==typeof t&&t.country)return j(t);if("string"==typeof t){const i=t.split(/[.-]/);return j({country:i.shift(),state:i.shift()||e,region:i.shift()||s})}},k.majorLang=function(t){return(t||"").split(/-/)[0]};const E="Sunday|Monday|Tuesday|Wednesday|Thursday|Friday|Saturday".split("|"),x=t=>E.includes(t)?t.toLowerCase():t,D=t=>"day"===t?void 0:x(t),M=function(){function t(t,e){return t=t.source,e=e||"",function s(i,n){return i?(n=(n=n.source||n).replace(/(^|[^[])\^/g,"$1"),t=t.replace(i,n),s):new RegExp(t,e)}}const e={_weekdays:"[Ss]unday|[Mm]onday|[Tt]uesday|[Ww]ednesday|[Tt]hursday|[Ff]riday|[Ss]aturday|day",_months:"January|February|March|April|May|June|July|August|September|October|November|December",_islamicMonths:"Muharram|Safar|Rabi al-awwal|Rabi al-thani|Jumada al-awwal|Jumada al-thani|Rajab|Shaban|Ramadan|Shawwal|Dhu al-Qidah|Dhu al-Hijjah",_hebrewMonths:"Nisan|Iyyar|Sivan|Tamuz|Av|Elul|Tishrei|Cheshvan|Kislev|Tevet|Shvat|AdarII|Adar",_jalaaliMonths:"Farvardin|Ordibehesht|Khordad|Tir|Mordad|Shahrivar|Mehr|Aban|Azar|Dey|Bahman|Esfand",_days:/(_weekdays)s?/,_direction:/(before|after|next|previous|in)/,_counts:/(\d+)(?:st|nd|rd|th)?/,_count_days:/([-+]?\d{1,2}) ?(?:days?|d)?/,_timezone:/ in ([^\s]*|[+-]\d{2}:\d{2})/,_type:/(public|bank|school|observance|optional)/,dateMonth:/^(_months)/,date:/^(?:0*(\d{1,4})-)?0?(\d{1,2})-0?(\d{1,2})/,time:/^(?:T?0?(\d{1,2}):0?(\d{1,2})|T0?(\d{1,2}))/,duration:/^P(?:(\d+)D)?(?:T(?:(\d+)H)?(?:(\d+)M)?)?/,julian:/^julian date/,easter:/^(easter|orthodox)(?: _count_days)?/,equinox:/^([Mm]arch|[Jj]une|[Ss]eptember|[Dd]ecember) (?:equinox|solstice)(?:_timezone)?/,hebrew:/^0?(\d{1,2}) (_hebrewMonths)(?: 0*(\d{1,}))?/,islamic:/^0?(\d{1,2}) (_islamicMonths)(?: 0*(\d{1,}))?/,jalaali:/^0?(\d{1,2}) (_jalaaliMonths)(?: 0*(\d{1,}))?/,chineseLunar:/^(chinese|korean|vietnamese) (?:(\d+)-(\d{1,2})-)?(\d{1,2})-([01])-(\d{1,2})/,chineseSolar:/^(chinese|korean|vietnamese) (?:(\d+)-(\d{1,2})-)?(\d{1,2})-(\d{1,2}) solarterm/,bengaliRevised:/^(bengali-revised) (?:-?0*(\d{1,4})-)?0?(\d{1,2})-0?(\d{1,2})/,modifier:/^(substitutes|and|if equal|then|if)\b/,rule_year:/^(?:in (even|odd|leap|non-leap) years|every (\d+) years? since 0*(\d{1,4}))/,rule_weekday:/(not )?on ((?:(?:_weekdays)(?:,\s?)?)*)/,rule_date_if_then:/^if ((?:(?:_weekdays)(?:,\s?)?)*) then (?:_direction _days)?/,rule_day_dir_date:/^(?:_counts )?_days _direction/,rule_bridge:/^is (?:_type )?holiday/,rule_if_holiday:/^if is (?:_type )?holiday then (?:_counts )?(?:_direction _days)?(?: omit ((?:(?:_weekdays)(?:,\s?)?)*))?/,rule_same_day:/^#\d+/,rule_active_from:/^since (0*\d{1,4})(?:-0*(\d{1,2})(?:-0*(\d{1,2})|)|)(?: and|)/,rule_active_to:/^prior to (0*\d{1,4})(?:-0*(\d{1,2})(?:-0*(\d{1,2})|)|)/,space:/^\s+/};e._days=t(e._days)(/_weekdays/,e._weekdays)(),e.julian=t(e.julian,"")(/date/,e.date)(),e.easter=t(e.easter,"")(/_count_days/,e._count_days)(),e.equinox=t(e.equinox,"")(/_count_days/g,e._count_days)(/_direction/g,e._direction)(/_timezone/g,e._timezone)(),e.hebrew=t(e.hebrew,"")(/_hebrewMonths/,e._hebrewMonths)(),e.islamic=t(e.islamic,"")(/_islamicMonths/,e._islamicMonths)(),e.jalaali=t(e.jalaali,"")(/_jalaaliMonths/,e._jalaaliMonths)(),e.dateMonth=t(e.dateMonth)(/_months/,e._months)(),e.rule_weekday=t(e.rule_weekday,"")(/_weekdays/g,e._weekdays)(),e.rule_date_if_then=t(e.rule_date_if_then,"")(/_direction/g,e._direction)(/_weekdays/g,e._weekdays)(/_days/g,e._days)(),e.rule_bridge=t(e.rule_bridge,"")(/_type/g,e._type)(),e.rule_if_holiday=t(e.rule_if_holiday,"")(/_type/g,e._type)(/_counts/g,e._counts)(/_direction/g,e._direction)(/_days/g,e._days)(/_weekdays/g,e._weekdays)(),e.rule_day_dir_date=t(e.rule_day_dir_date,"")(/_counts/,e._counts)(/_days/g,e._days)(/_direction/g,e._direction)();let s=1;return e.months={},e._months.split("|").forEach((function(t){e.months[t]=s++})),s=1,e.islamicMonths={},e._islamicMonths.split("|").forEach((function(t){e.islamicMonths[t]=s++})),s=1,e.hebrewMonths={},e._hebrewMonths.split("|").forEach((function(t){e.hebrewMonths[t]=s++})),e.hebrewMonths.Adar=12,e.hebrewMonths.AdarII=13,s=1,e.jalaaliMonths={},e._jalaaliMonths.split("|").forEach((function(t){e.jalaaliMonths[t]=s++})),e}();class S{constructor(t){this.fns=t||["_julian","_date","_easter","_islamic","_hebrew","_jalaali","_equinox","_chineseSolar","_chineseLunar","_bengaliRevised","_dateMonth","_ruleDateIfThen","_ruleWeekday","_ruleYear","_ruleDateDir","_ruleIfHoliday","_ruleBridge","_ruleTime","_ruleDuration","_ruleModifier","_ruleSameDay","_ruleActiveFrom","_ruleActiveTo"],this.tokens=[]}parse(t){return this.setup={str:t,rule:t},this.error=0,this.tokens=[],this._tokenize(this.setup),this._reorder(),this.tokens}_reorder(){const t=[],e=[];this.tokens.forEach((s=>{if("dateDir"===s.rule)t.push(s);else if(e.push(s),t.length)for(;t.length;)e.push(t.pop());if(s.fn&&e[0].modifier)for(;e[0].modifier;)e.push(e.shift())})),this.tokens=e}_tokenize(t){let e;for(;t.str;){for(let e=0;e<this.fns.length&&!this[this.fns[e]](t);e++);if(this._space(t),e===t.str){this.error++;break}e=t.str}}_shorten(t,e){t.str=t.str.substr(e.length,t.str.length)}_date(t){let e;if(e=M.date.exec(t.str)){this._shorten(t,e[0]),e.shift();const s={fn:"gregorian",year:v(e.shift()),month:v(e.shift()),day:v(e.shift())};return this.tokens.push(s),!0}}_julian(t){let e;if(e=M.julian.exec(t.str)){this._shorten(t,e[0]),e.shift();const s={fn:"julian",year:v(e.shift()),month:v(e.shift()),day:v(e.shift())};return this.tokens.push(s),!0}}_easter(t){let e;if(e=M.easter.exec(t.str)){this._shorten(t,e[0]),e.shift();const s={fn:"easter",type:e.shift(),offset:v(e.shift())||0};return this.tokens.push(s),!0}}_equinox(t){let e;if(e=M.equinox.exec(t.str)){this._shorten(t,e[0]),e.shift();const s={fn:"equinox",season:e.shift().toLowerCase(),timezone:e.shift()||"GMT"};return this.tokens.push(s),!0}}_hebrew(t){let e;if(e=M.hebrew.exec(t.str)){this._shorten(t,e[0]),e.shift();const s={fn:"hebrew",day:v(e.shift()),month:M.hebrewMonths[e.shift()],year:v(e.shift())};return this.tokens.push(s),!0}}_islamic(t){let e;if(e=M.islamic.exec(t.str)){this._shorten(t,e[0]),e.shift();const s={fn:"islamic",day:v(e.shift()),month:M.islamicMonths[e.shift()],year:v(e.shift())};return this.tokens.push(s),!0}}_jalaali(t){let e;if(e=M.jalaali.exec(t.str)){this._shorten(t,e[0]),e.shift();const s={fn:"jalaali",day:v(e.shift()),month:M.jalaaliMonths[e.shift()],year:v(e.shift())};return this.tokens.push(s),!0}}_chineseSolar(t){let e;if(e=M.chineseSolar.exec(t.str)){this._shorten(t,e[0]),e.shift();const s={fn:e.shift(),cycle:v(e.shift()),year:v(e.shift()),solarterm:v(e.shift()),day:v(e.shift()),timezone:e.shift()};return this.tokens.push(s),!0}}_chineseLunar(t){let e;if(e=M.chineseLunar.exec(t.str)){this._shorten(t,e[0]),e.shift();const s={fn:e.shift(),cycle:v(e.shift()),year:v(e.shift()),month:v(e.shift()),leapMonth:!!v(e.shift()),day:v(e.shift()),timezone:e.shift()};return this.tokens.push(s),!0}}_bengaliRevised(t){let e;if(e=M.bengaliRevised.exec(t.str)){this._shorten(t,e[0]),e.shift();const s={fn:e.shift(),year:v(e.shift()),month:v(e.shift()),day:v(e.shift())};return this.tokens.push(s),!0}}_dateMonth(t){let e;if(e=M.dateMonth.exec(t.str)){this._shorten(t,e[0]),e.shift();const s={fn:"gregorian",day:1,month:M.months[e.shift()],year:void 0};return this.tokens.push(s),!0}}_space(t){let e;if(e=M.space.exec(t.str))return this._shorten(t,e[0]),!0}_ruleSameDay(t){let e;if(e=M.rule_same_day.exec(t.str))return this._shorten(t,e[0]),!0}_ruleModifier(t){let e;if(e=M.modifier.exec(t.str)){this._shorten(t,e[0]),e.shift();const s={modifier:e.shift()};return this.tokens.push(s),!0}}_ruleTime(t){let e;if(e=M.time.exec(t.str)){this._shorten(t,e[0]),e.shift();const s={rule:"time",hour:v(e.shift())||0,minute:v(e.shift())||0};return s.hour=s.hour||v(e.shift())||0,this.tokens.push(s),!0}}_ruleDuration(t){let e;if(e=M.duration.exec(t.str)){this._shorten(t,e[0]),e.shift();const s={days:v(e.shift())||0,hours:v(e.shift())||0,minutes:v(e.shift())||0},i={rule:"duration",duration:24*s.days+s.hours+s.minutes/60};return this.tokens.push(i),!0}}_ruleDateIfThen(t){let e;if(e=M.rule_date_if_then.exec(t.str)){this._shorten(t,e[0]),e.shift();const s={rule:"dateIfThen",if:e.shift().split(/(?:,\s?)/).map(x),direction:e.shift(),then:x(e.shift())},i=new S(["_ruleTime","_ruleDuration"]);return i.parse(t.str),i.tokens.length&&(s.rules=i.tokens),t.str=" "+i.setup.str,this.tokens.push(s),!0}}_ruleWeekday(t){let e;if(e=M.rule_weekday.exec(t.str)){this._shorten(t,e[0]),e.shift();const s={rule:"weekday",not:!!e.shift(),if:e.shift().split(/(?:,\s?)/).map(x)};return this.tokens.push(s),!0}}_ruleDateDir(t){let e;if(e=M.rule_day_dir_date.exec(t.str)){this._shorten(t,e[0]),e.shift();const s={rule:"dateDir",count:v(e.shift())||1,weekday:x(e.shift()),direction:e.shift()};return"in"===s.direction&&(s.direction="after"),this.tokens.push(s),!0}}_ruleYear(t){let e;if(e=M.rule_year.exec(t.str)){this._shorten(t,e[0]),e.shift();const s={rule:"year",cardinality:e.shift(),every:v(e.shift()),since:v(e.shift())};return this.tokens.push(s),!0}}_ruleIfHoliday(t){let e;if(e=M.rule_if_holiday.exec(t.str)){this._shorten(t,e[0]),e.shift();const s={rule:"ruleIfHoliday",type:e.shift(),count:v(e.shift())||1,direction:e.shift(),weekday:x(e.shift()),omit:(e.shift()||"").split(/(?:,\s?)/).map(D).filter(Boolean)};return this.tokens.push(s),!0}}_ruleBridge(t){let e;if(e=M.rule_bridge.exec(t.str)){this._shorten(t,e[0]),e.shift();const s={rule:"bridge",type:e.shift()};return this.tokens.push(s),!0}}_ruleActiveFrom(t){let e;if(e=M.rule_active_from.exec(t.str)){this._shorten(t,e[0]),e.shift();const s={rule:"activeFrom",year:v(e.shift()),month:v(e.shift())||1,day:v(e.shift())||1};return this.tokens.push(s),!0}}_ruleActiveTo(t){let e;if(e=M.rule_active_to.exec(t.str)){this._shorten(t,e[0]),e.shift();const s={rule:"activeTo",year:v(e.shift()),month:v(e.shift())||1,day:v(e.shift())||1};return this.tokens.push(s),!0}}}class O{constructor(t){this.calEvent=t}setEvent(t){return this.calEvent=t,this}getEvent(){return this.calEvent}setModifier(t){this.modifier=t}resolve(t){return t.rule&&"function"==typeof this[t.rule]?this[t.rule](t):t.modifier&&(this.modifier=t.modifier),this}dateDir(t){const e=[].concat(t.omit).map((t=>g[t])).filter((t=>!(t=>null==t)(t))),s=(t,s)=>{let i=t+s;for(;i<0;)i+=70;return e.includes(i%7)};this.calEvent.dates.forEach((e=>{let i,n=t.count-1;const r=e.getDay(),a=g[t.weekday],o=["before","previous"].includes(t.direction);if("next"===t.direction&&r===a&&(n+=1),"day"===t.weekday){let t=0;if(o)for(i=-1*(n+1);t++<7&&s(i,r);)i-=1;else for(i=n+1;t++<7&&s(i,r);)i+=1}else o?(r===a&&n++,i=-1*((7+r-a)%7+7*n)):i=(7-r+a)%7+7*n;i&&e.setOffset(i)}))}dateIfThen(e){const s=[];this.calEvent.dates=this.calEvent.dates.map((i=>{if(i._lock)return i;const n=i.getDay();if(~e.if.indexOf(g[n])){"and"===this.modifier&&(s.push(new t(i)),i.substitute=!0),i._filter=!1;let r=0;const a=g[e.then];e.then&&"undefined"!==a&&("previous"===e.direction?(r=(7+n-a)%7*-1,r||(r=-7)):(r=(7-n+a)%7,r||(r=7)),i.setOffset(r),i._lock=!0,"substitutes"===this.modifier&&(i.substitute=!0)),(e.rules||[]).forEach((t=>{switch(t.rule){case"time":i.setTime(t.hour,t.minute);break;case"duration":i.duration=t.duration}}))}else"substitutes"===this.modifier&&(i._filter=!0);return i})),this.calEvent.dates=s.concat(this.calEvent.dates)}weekday(t){this.calEvent.dates=this.calEvent.dates.map((e=>{const s=e.getDay();let i=-1!==t.if.indexOf(g[s]);if(t.not&&(i=!i),i)return e})).filter((t=>t))}time(t){this.calEvent.dates.forEach((e=>{e.setTime(t.hour,t.minute)}))}duration(t){this.calEvent.dates.forEach((e=>{e.duration=t.duration}))}bridge(){return!0}ruleIfHoliday(){return!0}activeFrom(e){this.calEvent.setActive({from:new t(e).toDate()})}activeTo(e){this.calEvent.setActive({to:new t(e).toDate()})}year(t){this.calEvent.dates=this.calEvent.dates.map((e=>{if(t.cardinality){if("leap"===t.cardinality&&this._isLeapYear(e.year))return e;if("non-leap"===t.cardinality&&!this._isLeapYear(e.year))return e;if("even"===t.cardinality&&(e.year+1)%2)return e;if("odd"===t.cardinality&&e.year%2)return e}else if(void 0!==t.every&&void 0!==t.since){if(0===(e.year-t.since)%t.every)return e}})).filter((t=>t))}_isLeapYear(t){return t%400==0||t%4==0&&t%100!=0}}class T{constructor(e){e=e||{},this.substitute=e.substitute,this.opts=e,this.offset=e.offset,this.dates=[],this.active=void 0,b(e)&&(this.opts=new t(e))}inYear(e){const s=new t(this.opts).setOffset(this.offset);return s.year&&s.year!==e||(s.year=e,this.dates.push(s)),this}reset(){this.dates=[]}isEqualDate(t){let e=!1;for(const s of this.dates)for(const i of t.dates)e|=s.isEqualDate(i);return!!e}filterDisabled(t,e){return t?(this.dates=this.dates.filter((s=>!(e?s.year===t&&s.month===e:s.year===t))),this):this}filterActive(t,e=this.active){return this.dates=this.dates.filter((s=>{if(!s._filter&&function(t,e,s){if(!s)return t.year===e;const i=t.toDate();for(const n of s){const{from:s,to:r}=n;if(t.year===e&&(s&&r&&s<=i&&r>i||s&&!r&&s<=i||!s&&r&&r>i))return!0}}(s,t,e))return s})),this}setActive(t){const{from:e,to:s}=t;let i=!0;if(this.active=this.active||[],s&&!e){const t=this.active[this.active.length-1];t&&t.from&&!t.to&&(t.to=s,i=!1)}return i&&this.active.push(t),this}push(t){t&&Array.isArray(t.dates)&&(this.dates=this.dates.concat(t.dates))}get(e){return this.dates.map((s=>{const i=new t(s),n={date:i.toString(),start:i.toTimezone(e),end:i.toEndDate().toTimezone(e)};return this._addSubstitute(s,n),n}))}_addSubstitute(t,e){(this.substitute||t.substitute)&&(e.substitute=!0)}}class z{constructor(t,e,s){this.opts=e,this.ruleStr=t,this.ruleSet=s&&s[t],this.holidays=s,this.events=[]}push(t){this.events.push(t)}getEvent(t){const e=this.ruleSet&&this.ruleSet.active;this.disable(t);const s=this.events[0];return s.filterActive(t,e),s}resolve(t,e){t.rule&&"function"==typeof this[t.rule]&&this[t.rule](t,e)}bridge(t,e){const s=new Array(this.events.length).fill(!1);s[0]=!0;const i=t.type||"public";for(const n in this.holidays){const t=this.holidays[n].fn;if(t&&t.ruleStr!==this.ruleStr){const n=t.inYear(e),r=f(n,"opts.type")||"public";for(let t=1;t<this.events.length;t++){if(s[t])continue;n.event.isEqualDate(this.events[t])&&r===i&&(s[t]=!0)}}if(!~s.indexOf(!1))break}~s.indexOf(!1)&&this.events[0].reset()}ruleIfHoliday(t,e){const s=t.type||"public";for(const i in this.holidays){const n=this.holidays[i].fn;if(n&&n.ruleStr!==this.ruleStr){const i=n.inYear(e),r=f(i,"opts.type")||"public";for(let e=0;e<this.events.length;e++){if(i.event.isEqualDate(this.events[e])&&r===s)return void new O(this.events[e]).resolve({...t,rule:"dateDir"})}}}}disable(t){const{disable:e,enable:s}=this.opts||{};if(!e||!e.length)return;const i=this.events[0];let n=L(t,e);if(n)return void(n.isEqualDate(i)&&(i.reset(),n=L(t,s),n&&(this.events[0]=n)));const[r,a]=function(t,e=[]){for(const s of e){const[e,i]=A(s);if(t===e)return[e,i]}return[]}(t,e);i.filterDisabled(r,a)}}const A=t=>String(t).split("-").map((t=>((t,e)=>{const s=Number(t);return isNaN(s)?e:s})(t)));function L(t,e=[]){for(const s of e){const[e,i,n]=A(s);if(e===t&&i&&n)return new T({year:e,month:i,day:n}).inYear(e)}}class Y extends T{constructor(t){super(t=t||{}),this._fn=e.easter,"orthodox"===t.type&&(this._fn=e.orthodoxEaster)}inYear(e){const s=new t(this._fn(e)).setOffset(this.offset);return this.dates.push(s),this}}class R extends T{inYear(e){if(this.opts.year&&this.opts.year!==e)return this;const i=new s.CalendarJulian(e,this.opts.month,this.opts.day).toGregorian(),n=new t(i).setOffset(this.offset);return this.dates.push(n),this}}class I extends T{constructor(t){super(t),this.calendar={}}inYear(e){if(!(this.calendar[e]&&this.calendar[e+1]&&this.calendar[e-1]))return this;for(let s=e-1;s<=e+1;s++){const i=this.calendar[s][this.opts.month-1];if(i)for(let n=0;n<i.length;n+=3){if(this.opts.year){const t=this.calendar.year+i[n+2];if(this.opts.year!==t)continue}const r=new t({year:s,month:i[n]+1,day:i[n+1]}).setOffset(this.opts.day-1);r.year===e&&this.dates.push(r)}}return this}}const q={1968:[null,null,null,null,null,null,[8,23,0],[9,23,0],[10,22,0],[11,22,0]],1969:[[2,20,0],[3,19,0],[4,18,0],[5,17,0],[6,16,0],[7,15,0],[8,13,1],[9,13,1],[10,11,1],[11,10,1],[0,20,0],[1,19,0],[1,19,0]],1970:[[3,7,1],[4,7,1],[5,5,1],[6,5,1],[7,3,1],[8,2,1],[9,1,2],[9,31,2],[10,29,2],[11,29,2],[0,8,1],[1,7,1],[2,9,1]],1971:[[2,27,2],[3,26,2],[4,25,2],[5,24,2],[6,23,2],[7,22,2],[8,20,3],[9,20,3],[10,19,3],[11,19,3],[0,27,2],[1,26,2],[1,26,2]],1972:[[2,16,3],[3,15,3],[4,14,3],[5,13,3],[6,12,3],[7,11,3],[8,9,4],[9,9,4],[10,7,4],[11,6,4],[0,17,3],[1,16,3],[1,16,3]],1973:[[3,3,4],[4,3,4],[5,1,4],[6,1,4],[6,30,4],[7,29,4],[8,27,5],[9,27,5],[10,26,5],[11,26,5],[0,4,4],[1,3,4],[2,5,4]],1974:[[2,24,5],[3,23,5],[4,22,5],[5,21,5],[6,20,5],[7,19,5],[8,17,6],[9,17,6],[10,15,6],[11,15,6],[0,24,5],[1,23,5],[1,23,5]],1975:[[2,13,6],[3,12,6],[4,11,6],[5,10,6],[6,9,6],[7,8,6],[8,6,7],[9,6,7],[10,5,7],[11,5,7],[0,13,6],[1,12,6],[1,12,6]],1976:[[3,1,7],[4,1,7],[4,30,7],[5,29,7],[6,28,7],[7,27,7],[8,25,8],[9,25,8],[10,23,8],[11,22,8],[0,3,7],[1,2,7],[2,3,7]],1977:[[2,20,8],[3,19,8],[4,18,8],[5,17,8],[6,16,8],[7,15,8],[8,13,9],[9,13,9],[10,11,9],[11,11,9],[0,20,8],[1,19,8],[1,19,8]],1978:[[3,8,9],[4,8,9],[5,6,9],[6,6,9],[7,4,9],[8,3,9],[9,2,10],[10,1,10],[11,1,10],[11,31,10],[0,9,9],[1,8,9],[2,10,9]],1979:[[2,29,10],[3,28,10],[4,27,10],[5,26,10],[6,25,10],[7,24,10],[8,22,11],[9,22,11],[10,21,11],[11,21,11],[0,29,10],[1,28,10],[1,28,10]],1980:[[2,18,11],[3,17,11],[4,16,11],[5,15,11],[6,14,11],[7,13,11],[8,11,12],[9,11,12],[10,9,12],[11,8,12],[0,19,11],[1,18,11],[1,18,11]],1981:[[3,5,12],[4,5,12],[5,3,12],[6,3,12],[7,1,12],[7,31,12],[8,29,13],[9,29,13],[10,27,13],[11,27,13],[0,6,12],[1,5,12],[2,7,12]],1982:[[2,25,13],[3,24,13],[4,23,13],[5,22,13],[6,21,13],[7,20,13],[8,18,14],[9,18,14],[10,17,14],[11,17,14],[0,25,13],[1,24,13],[1,24,13]],1983:[[2,15,14],[3,14,14],[4,13,14],[5,12,14],[6,11,14],[7,10,14],[8,8,15],[9,8,15],[10,7,15],[11,7,15],[0,15,14],[1,14,14],[1,14,14]],1984:[[3,3,15],[4,3,15],[5,1,15],[6,1,15],[6,30,15],[7,29,15],[8,27,16],[9,27,16],[10,25,16],[11,25,16],[0,5,15],[1,4,15],[2,5,15]],1985:[[2,23,16],[3,22,16],[4,21,16],[5,20,16],[6,19,16],[7,18,16],[8,16,17],[9,16,17],[10,14,17],[11,13,17],[0,23,16],[1,22,16],[1,22,16]],1986:[[3,10,17],[4,10,17],[5,8,17],[6,8,17],[7,6,17],[8,5,17],[9,4,18],[10,3,18],[11,3,18],null,[0,11,17],[1,10,17],[2,12,17]],1987:[[2,31,18],[3,30,18],[4,29,18],[5,28,18],[6,27,18],[7,26,18],[8,24,19],[9,24,19],[10,22,19],[0,2,18,11,22,19],[0,31,18],[2,2,18],[2,2,18]],1988:[[2,19,19],[3,18,19],[4,17,19],[5,16,19],[6,15,19],[7,14,19],[8,12,20],[9,12,20],[10,10,20],[11,9,20],[0,20,19],[1,19,19],[1,19,19]],1989:[[3,6,20],[4,6,20],[5,4,20],[6,4,20],[7,2,20],[8,1,20],[8,30,21],[9,30,21],[10,29,21],[11,29,21],[0,7,20],[1,6,20],[2,8,20]],1990:[[2,27,21],[3,26,21],[4,25,21],[5,24,21],[6,23,21],[7,22,21],[8,20,22],[9,20,22],[10,18,22],[11,18,22],[0,27,21],[1,26,21],[1,26,21]],1991:[[2,16,22],[3,15,22],[4,14,22],[5,13,22],[6,12,22],[7,11,22],[8,9,23],[9,9,23],[10,8,23],[11,8,23],[0,16,22],[1,15,22],[1,15,22]],1992:[[3,4,23],[4,4,23],[5,2,23],[6,2,23],[6,31,23],[7,30,23],[8,28,24],[9,28,24],[10,26,24],[11,25,24],[0,6,23],[1,5,23],[2,6,23]],1993:[[2,23,24],[3,22,24],[4,21,24],[5,20,24],[6,19,24],[7,18,24],[8,16,25],[9,16,25],[10,15,25],[11,15,25],[0,23,24],[1,22,24],[1,22,24]],1994:[[2,13,25],[3,12,25],[4,11,25],[5,10,25],[6,9,25],[7,8,25],[8,6,26],[9,6,26],[10,4,26],[11,4,26],[0,13,25],[1,12,25],[1,12,25]],1995:[[3,1,26],[4,1,26],[4,30,26],[5,29,26],[6,28,26],[7,27,26],[8,25,27],[9,25,27],[10,24,27],[11,24,27],[0,2,26],[1,1,26],[2,3,26]],1996:[[2,21,27],[3,20,27],[4,19,27],[5,18,27],[6,17,27],[7,16,27],[8,14,28],[9,14,28],[10,12,28],[11,11,28],[0,22,27],[1,21,27],[1,21,27]],1997:[[3,8,28],[4,8,28],[5,6,28],[6,6,28],[7,4,28],[8,3,28],[9,2,29],[10,1,29],[10,30,29],[11,30,29],[0,9,28],[1,8,28],[2,10,28]],1998:[[2,28,29],[3,27,29],[4,26,29],[5,25,29],[6,24,29],[7,23,29],[8,21,30],[9,21,30],[10,20,30],[11,20,30],[0,28,29],[1,27,29],[1,27,29]],1999:[[2,18,30],[3,17,30],[4,16,30],[5,15,30],[6,14,30],[7,13,30],[8,11,31],[9,11,31],[10,10,31],[11,10,31],[0,18,30],[1,17,30],[1,17,30]],2e3:[[3,6,31],[4,6,31],[5,4,31],[6,4,31],[7,2,31],[8,1,31],[8,30,32],[9,30,32],[10,28,32],[11,27,32],[0,8,31],[1,7,31],[2,8,31]],2001:[[2,25,32],[3,24,32],[4,23,32],[5,22,32],[6,21,32],[7,20,32],[8,18,33],[9,18,33],[10,16,33],[11,16,33],[0,25,32],[1,24,32],[1,24,32]],2002:[[2,14,33],[3,13,33],[4,12,33],[5,11,33],[6,10,33],[7,9,33],[8,7,34],[9,7,34],[10,6,34],[11,6,34],[0,14,33],[1,13,33],[1,13,33]],2003:[[3,3,34],[4,3,34],[5,1,34],[6,1,34],[6,30,34],[7,29,34],[8,27,35],[9,27,35],[10,26,35],[11,26,35],[0,4,34],[1,3,34],[2,5,34]],2004:[[2,23,35],[3,22,35],[4,21,35],[5,20,35],[6,19,35],[7,18,35],[8,16,36],[9,16,36],[10,14,36],[11,13,36],[0,24,35],[1,23,35],[1,23,35]],2005:[[3,10,36],[4,10,36],[5,8,36],[6,8,36],[7,6,36],[8,5,36],[9,4,37],[10,3,37],[11,2,37],null,[0,11,36],[1,10,36],[2,12,36]],2006:[[2,30,37],[3,29,37],[4,28,37],[5,27,37],[6,26,37],[7,25,37],[8,23,38],[9,23,38],[10,22,38],[0,1,37,11,22,38],[0,30,37],[2,1,37],[2,1,37]],2007:[[2,20,38],[3,19,38],[4,18,38],[5,17,38],[6,16,38],[7,15,38],[8,13,39],[9,13,39],[10,11,39],[11,10,39],[0,20,38],[1,19,38],[1,19,38]],2008:[[3,6,39],[4,6,39],[5,4,39],[6,4,39],[7,2,39],[8,1,39],[8,30,40],[9,30,40],[10,28,40],[11,28,40],[0,8,39],[1,7,39],[2,8,39]],2009:[[2,26,40],[3,25,40],[4,24,40],[5,23,40],[6,22,40],[7,21,40],[8,19,41],[9,19,41],[10,18,41],[11,18,41],[0,26,40],[1,25,40],[1,25,40]],2010:[[2,16,41],[3,15,41],[4,14,41],[5,13,41],[6,12,41],[7,11,41],[8,9,42],[9,9,42],[10,8,42],[11,8,42],[0,16,41],[1,15,41],[1,15,41]],2011:[[3,5,42],[4,5,42],[5,3,42],[6,3,42],[7,1,42],[7,31,42],[8,29,43],[9,29,43],[10,27,43],[11,27,43],[0,6,42],[1,5,42],[2,7,42]],2012:[[2,24,43],[3,23,43],[4,22,43],[5,21,43],[6,20,43],[7,19,43],[8,17,44],[9,17,44],[10,15,44],[11,14,44],[0,25,43],[1,24,43],[1,24,43]],2013:[[2,12,44],[3,11,44],[4,10,44],[5,9,44],[6,8,44],[7,7,44],[8,5,45],[9,5,45],[10,4,45],[11,4,45],[0,12,44],[1,11,44],[1,11,44]],2014:[[3,1,45],[4,1,45],[4,30,45],[5,29,45],[6,28,45],[7,27,45],[8,25,46],[9,25,46],[10,23,46],[11,23,46],[0,2,45],[1,1,45],[2,3,45]],2015:[[2,21,46],[3,20,46],[4,19,46],[5,18,46],[6,17,46],[7,16,46],[8,14,47],[9,14,47],[10,13,47],[11,13,47],[0,21,46],[1,20,46],[1,20,46]],2016:[[3,9,47],[4,9,47],[5,7,47],[6,7,47],[7,5,47],[8,4,47],[9,3,48],[10,2,48],[11,1,48],[11,30,48],[0,11,47],[1,10,47],[2,11,47]],2017:[[2,28,48],[3,27,48],[4,26,48],[5,25,48],[6,24,48],[7,23,48],[8,21,49],[9,21,49],[10,19,49],[11,19,49],[0,28,48],[1,27,48],[1,27,48]],2018:[[2,17,49],[3,16,49],[4,15,49],[5,14,49],[6,13,49],[7,12,49],[8,10,50],[9,10,50],[10,9,50],[11,9,50],[0,17,49],[1,16,49],[1,16,49]],2019:[[3,6,50],[4,6,50],[5,4,50],[6,4,50],[7,2,50],[8,1,50],[8,30,51],[9,30,51],[10,29,51],[11,29,51],[0,7,50],[1,6,50],[2,8,50]],2020:[[2,26,51],[3,25,51],[4,24,51],[5,23,51],[6,22,51],[7,21,51],[8,19,52],[9,19,52],[10,17,52],[11,16,52],[0,27,51],[1,26,51],[1,26,51]],2021:[[2,14,52],[3,13,52],[4,12,52],[5,11,52],[6,10,52],[7,9,52],[8,7,53],[9,7,53],[10,5,53],[11,5,53],[0,14,52],[1,13,52],[1,13,52]],2022:[[3,2,53],[4,2,53],[4,31,53],[5,30,53],[6,29,53],[7,28,53],[8,26,54],[9,26,54],[10,25,54],[11,25,54],[0,3,53],[1,2,53],[2,4,53]],2023:[[2,23,54],[3,22,54],[4,21,54],[5,20,54],[6,19,54],[7,18,54],[8,16,55],[9,16,55],[10,14,55],[11,13,55],[0,23,54],[1,22,54],[1,22,54]],2024:[[3,9,55],[4,9,55],[5,7,55],[6,7,55],[7,5,55],[8,4,55],[9,3,56],[10,2,56],[11,2,56],null,[0,11,55],[1,10,55],[2,11,55]],2025:[[2,30,56],[3,29,56],[4,28,56],[5,27,56],[6,26,56],[7,25,56],[8,23,57],[9,23,57],[10,21,57],[0,1,56,11,21,57],[0,30,56],[2,1,56],[2,1,56]],2026:[[2,19,57],[3,18,57],[4,17,57],[5,16,57],[6,15,57],[7,14,57],[8,12,58],[9,12,58],[10,11,58],[11,11,58],[0,19,57],[1,18,57],[1,18,57]],2027:[[3,8,58],[4,8,58],[5,6,58],[6,6,58],[7,4,58],[8,3,58],[9,2,59],[10,1,59],[11,1,59],[11,31,59],[0,9,58],[1,8,58],[2,10,58]],2028:[[2,28,59],[3,27,59],[4,26,59],[5,25,59],[6,24,59],[7,23,59],[8,21,60],[9,21,60],[10,19,60],[11,19,60],[0,29,59],[1,28,59],[1,28,59]],2029:[[2,17,60],[3,16,60],[4,15,60],[5,14,60],[6,13,60],[7,12,60],[8,10,61],[9,10,61],[10,8,61],[11,7,61],[0,17,60],[1,16,60],[1,16,60]],2030:[[3,4,61],[4,4,61],[5,2,61],[6,2,61],[6,31,61],[7,30,61],[8,28,62],[9,28,62],[10,27,62],[11,27,62],[0,5,61],[1,4,61],[2,6,61]],2031:[[2,25,62],[3,24,62],[4,23,62],[5,22,62],[6,21,62],[7,20,62],[8,18,63],[9,18,63],[10,16,63],[11,16,63],[0,25,62],[1,24,62],[1,24,62]],2032:[[2,13,63],[3,12,63],[4,11,63],[5,10,63],[6,9,63],[7,8,63],[8,6,64],[9,6,64],[10,4,64],[11,3,64],[0,14,63],[1,13,63],[1,13,63]],2033:[[2,31,64],[3,30,64],[4,29,64],[5,28,64],[6,27,64],[7,26,64],[8,24,65],[9,24,65],[10,23,65],[11,23,65],[0,1,64],[0,31,64],[2,2,64]],2034:[[2,21,65],[3,20,65],[4,19,65],[5,18,65],[6,17,65],[7,16,65],[8,14,66],[9,14,66],[10,13,66],[11,13,66],[0,21,65],[1,20,65],[1,20,65]],2035:[[3,10,66],[4,10,66],[5,8,66],[6,8,66],[7,6,66],[8,5,66],[9,4,67],[10,3,67],[11,2,67],null,[0,11,66],[1,10,66],[2,12,66]],2036:[[2,29,67],[3,28,67],[4,27,67],[5,26,67],[6,25,67],[7,24,67],[8,22,68],[9,22,68],[10,20,68],[0,1,67,11,19,68],[0,30,67],[1,29,67],[1,29,67]],2037:[[2,17,68],[3,16,68],[4,15,68],[5,14,68],[6,13,68],[7,12,68],[8,10,69],[9,10,69],[10,9,69],[11,9,69],[0,17,68],[1,16,68],[1,16,68]],2038:[[3,6,69],[4,6,69],[5,4,69],[6,4,69],[7,2,69],[8,1,69],[8,30,70],[9,30,70],[10,28,70],[11,28,70],[0,7,69],[1,6,69],[2,8,69]],2039:[[2,26,70],[3,25,70],[4,24,70],[5,23,70],[6,22,70],[7,21,70],[8,19,71],[9,19,71],[10,18,71],[11,18,71],[0,26,70],[1,25,70],[1,25,70]],2040:[[2,15,71],[3,14,71],[4,13,71],[5,12,71],[6,11,71],[7,10,71],[8,8,72],[9,8,72],[10,6,72],[11,5,72],[0,16,71],[1,15,71],[1,15,71]],2041:[[3,2,72],[4,2,72],[4,31,72],[5,30,72],[6,29,72],[7,28,72],[8,26,73],[9,26,73],[10,24,73],[11,24,73],[0,3,72],[1,2,72],[2,4,72]],2042:[[2,22,73],[3,21,73],[4,20,73],[5,19,73],[6,18,73],[7,17,73],[8,15,74],[9,15,74],[10,14,74],[11,14,74],[0,22,73],[1,21,73],[1,21,73]],2043:[[3,11,74],[4,11,74],[5,9,74],[6,9,74],[7,7,74],[8,6,74],[9,5,75],[10,4,75],[11,3,75],null,[0,12,74],[1,11,74],[2,13,74]],2044:[[2,29,75],[3,28,75],[4,27,75],[5,26,75],[6,25,75],[7,24,75],[8,22,76],[9,22,76],[10,21,76],[0,1,75,11,21,76],[0,30,75],[1,29,75],[1,29,75]],2045:[[2,19,76],[3,18,76],[4,17,76],[5,16,76],[6,15,76],[7,14,76],[8,12,77],[9,12,77],[10,10,77],[11,10,77],[0,19,76],[1,18,76],[1,18,76]],2046:[[3,7,77],[4,7,77],[5,5,77],[6,5,77],[7,3,77],[8,2,77],[9,1,78],[9,31,78],[10,30,78],[11,30,78],[0,8,77],[1,7,77],[2,9,77]],2047:[[2,28,78],[3,27,78],[4,26,78],[5,25,78],[6,24,78],[7,23,78],[8,21,79],[9,21,79],[10,19,79],[11,18,79],[0,28,78],[1,27,78],[1,27,78]],2048:[[2,15,79],[3,14,79],[4,13,79],[5,12,79],[6,11,79],[7,10,79],[8,8,80],[9,8,80],[10,6,80],[11,6,80],[0,16,79],[1,15,79],[1,15,79]],2049:[[3,3,80],[4,3,80],[5,1,80],[6,1,80],[6,30,80],[7,29,80],[8,27,81],[9,27,81],[10,26,81],[11,26,81],[0,4,80],[1,3,80],[2,5,80]],2050:[[2,24,81],[3,23,81],[4,22,81],[5,21,81],[6,20,81],[7,19,81],[8,17,82],[9,17,82],[10,16,82],[11,16,82],[0,24,81],[1,23,81],[1,23,81]],2051:[[2,14,82],[3,13,82],[4,12,82],[5,11,82],[6,10,82],[7,9,82],[8,7,83],[9,7,83],[10,5,83],[11,4,83],[0,14,82],[1,13,82],[1,13,82]],2052:[[2,31,83],[3,30,83],[4,29,83],[5,28,83],[6,27,83],[7,26,83],[8,24,84],[9,24,84],[10,22,84],[11,22,84],[0,2,83],[1,1,83],[2,2,83]],2053:[[2,20,84],[3,19,84],[4,18,84],[5,17,84],[6,16,84],[7,15,84],[8,13,85],[9,13,85],[10,12,85],[11,12,85],[0,20,84],[1,19,84],[1,19,84]],2054:[[3,9,85],[4,9,85],[5,7,85],[6,7,85],[7,5,85],[8,4,85],[9,3,86],[10,2,86],[11,2,86],null,[0,10,85],[1,9,85],[2,11,85]],2055:[[2,30,86],[3,29,86],[4,28,86],[5,27,86],[6,26,86],[7,25,86],[8,23,87],[9,23,87],[10,21,87],[0,1,86,11,21,87],[0,30,86],[2,1,86],[2,1,86]],2056:[[2,18,87],[3,17,87],[4,16,87],[5,15,87],[6,14,87],[7,13,87],[8,11,88],[9,11,88],[10,9,88],[11,8,88],[0,19,87],[1,18,87],[1,18,87]],2057:[[3,5,88],[4,5,88],[5,3,88],[6,3,88],[7,1,88],[7,31,88],[8,29,89],[9,29,89],[10,28,89],[11,28,89],[0,6,88],[1,5,88],[2,7,88]],2058:[[2,26,89],[3,25,89],[4,24,89],[5,23,89],[6,22,89],[7,21,89],[8,19,90],[9,19,90],[10,17,90],[11,17,90],[0,26,89],[1,25,89],[1,25,89]],2059:[[2,15,90],[3,14,90],[4,13,90],[5,12,90],[6,11,90],[7,10,90],[8,8,91],[9,8,91],[10,6,91],[11,5,91],[0,15,90],[1,14,90],[1,14,90]],2060:[[3,1,91],[4,1,91],[4,30,91],[5,29,91],[6,28,91],[7,27,91],[8,25,92],[9,25,92],[10,24,92],[11,24,92],[0,3,91],[1,2,91],[2,3,91]],2061:[[2,22,92],[3,21,92],[4,20,92],[5,19,92],[6,18,92],[7,17,92],[8,15,93],[9,15,93],[10,14,93],[11,14,93],[0,22,92],[1,21,92],[1,21,92]],2062:[[3,11,93],[4,11,93],[5,9,93],[6,9,93],[7,7,93],[8,6,93],[9,5,94],[10,4,94],[11,3,94],null,[0,12,93],[1,11,93],[2,13,93]],2063:[[2,31,94],[3,30,94],[4,29,94],[5,28,94],[6,27,94],[7,26,94],[8,24,95],[9,24,95],[10,22,95],[0,2,94,11,21,95],[0,31,94],[2,2,94],[2,2,94]],2064:[[2,18,95],[3,17,95],[4,16,95],[5,15,95],[6,14,95],[7,13,95],[8,11,96],[9,11,96],[10,10,96],[11,10,96],[0,19,95],[1,18,95],[1,18,95]],2065:[[3,7,96],[4,7,96],[5,5,96],[6,5,96],[7,3,96],[8,2,96],[9,1,97],[9,31,97],[10,29,97],[11,29,97],[0,8,96],[1,7,96],[2,9,96]],2066:[[2,27,97],[3,26,97],[4,25,97],[5,24,97],[6,23,97],[7,22,97],[8,20,98],[9,20,98],[10,19,98],[11,19,98],[0,27,97],[1,26,97],[1,26,97]],2067:[[2,17,98],[3,16,98],[4,15,98],[5,14,98],[6,13,98],[7,12,98],[8,10,99],[9,10,99],[10,8,99],[11,7,99],[0,17,98],[1,16,98],[1,16,98]],2068:[[3,3,99],[4,3,99],[5,1,99],[6,1,99],[6,30,99],[7,29,99],[8,27,100],[9,27,100],[10,25,100],[11,25,100],[0,5,99],[1,4,99],[2,5,99]],2069:[[2,23,100],[3,22,100],[4,21,100],[5,20,100],[6,19,100],[7,18,100],[8,16,101],[9,16,101],[10,15,101],[11,15,101],[0,23,100],[1,22,100],[1,22,100]],2070:[[2,13,101],[3,12,101],[4,11,101],[5,10,101],[6,9,101],[7,8,101],[8,6,102],[9,6,102],[10,4,102],[11,3,102],[0,13,101],[1,12,101],[1,12,101]],2071:[[2,31,102],[3,30,102],[4,29,102],[5,28,102],[6,27,102],[7,26,102],[8,24,103],[9,24,103],[10,23,103],[11,23,103],[0,1,102],[0,31,102],[2,2,102]],2072:[[2,20,103],[3,19,103],[4,18,103],[5,17,103],[6,16,103],[7,15,103],[8,13,104],[9,13,104],[10,11,104],[11,11,104],[0,21,103],[1,20,103],[1,20,103]],2073:[[3,8,104],[4,8,104],[5,6,104],[6,6,104],[7,4,104],[8,3,104],[9,2,105],[10,1,105],[11,1,105],[11,31,105],[0,9,104],[1,8,104],[2,10,104]],2074:[[2,29,105],[3,28,105],[4,27,105],[5,26,105],[6,25,105],[7,24,105],[8,22,106],[9,22,106],[10,20,106],[11,19,106],[0,29,105],[1,28,105],[1,28,105]],2075:[[2,17,106],[3,16,106],[4,15,106],[5,14,106],[6,13,106],[7,12,106],[8,10,107],[9,10,107],[10,8,107],[11,8,107],[0,17,106],[1,16,106],[1,16,106]],2076:[[3,4,107],[4,4,107],[5,2,107],[6,2,107],[6,31,107],[7,30,107],[8,28,108],[9,28,108],[10,27,108],[11,27,108],[0,6,107],[1,5,107],[2,6,107]],2077:[[2,25,108],[3,24,108],[4,23,108],[5,22,108],[6,21,108],[7,20,108],[8,18,109],[9,18,109],[10,17,109],[11,17,109],[0,25,108],[1,24,108],[1,24,108]],2078:[[2,15,109],[3,14,109],[4,13,109],[5,12,109],[6,11,109],[7,10,109],[8,8,110],[9,8,110],[10,6,110],[11,5,110],[0,15,109],[1,14,109],[1,14,109]],2079:[[3,2,110],[4,2,110],[4,31,110],[5,30,110],[6,29,110],[7,28,110],[8,26,111],[9,26,111],[10,24,111],[11,24,111],[0,3,110],[1,2,110],[2,4,110]],2080:[[2,21,111],[3,20,111],[4,19,111],[5,18,111],[6,17,111],[7,16,111],[8,14,112],[9,14,112],[10,13,112],[11,13,112],[0,22,111],[1,21,111],[1,21,111]],2081:[[3,10,112],[4,10,112],[5,8,112],[6,8,112],[7,6,112],[8,5,112],[9,4,113],[10,3,113],[11,3,113],null,[0,11,112],[1,10,112],[2,12,112]],2082:[[2,31,113],[3,30,113],[4,29,113],[5,28,113],[6,27,113],[7,26,113],[8,24,114],[9,24,114],[10,22,114],[0,2,113,11,22,114],[0,31,113],[2,2,113],[2,2,113]],2083:[[2,20,114],[3,19,114],[4,18,114],[5,17,114],[6,16,114],[7,15,114],[8,13,115],[9,13,115],[10,11,115],[11,10,115],[0,20,114],[1,19,114],[1,19,114]],2084:[[3,6,115],[4,6,115],[5,4,115],[6,4,115],[7,2,115],[8,1,115],[8,30,116],[9,30,116],[10,29,116],[11,29,116],[0,8,115],[1,7,115],[2,8,115]],2085:[[2,27,116],[3,26,116],[4,25,116],[5,24,116],[6,23,116],[7,22,116],[8,20,117],[9,20,117],[10,18,117],[11,18,117],[0,27,116],[1,26,116],[1,26,116]],2086:[[2,16,117],[3,15,117],[4,14,117],[5,13,117],[6,12,117],[7,11,117],[8,9,118],[9,9,118],[10,7,118],[11,6,118],[0,16,117],[1,15,117],[1,15,117]],2087:[[3,3,118],[4,3,118],[5,1,118],[6,1,118],[6,30,118],[7,29,118],[8,27,119],[9,27,119],[10,26,119],[11,26,119],[0,4,118],[1,3,118],[2,5,118]],2088:[[2,23,119],[3,22,119],[4,21,119],[5,20,119],[6,19,119],[7,18,119],[8,16,120],[9,16,120],[10,14,120],[11,14,120],[0,24,119],[1,23,119],[1,23,119]],2089:[[2,12,120],[3,11,120],[4,10,120],[5,9,120],[6,8,120],[7,7,120],[8,5,121],[9,5,121],[10,4,121],[11,4,121],[0,12,120],[1,11,120],[1,11,120]],2090:[[3,1,121],[4,1,121],[4,30,121],[5,29,121],[6,28,121],[7,27,121],[8,25,122],[9,25,122],[10,23,122],[11,22,122],[0,2,121],[1,1,121],[2,3,121]],2091:[[2,20,122],[3,19,122],[4,18,122],[5,17,122],[6,16,122],[7,15,122],[8,13,123],[9,13,123],[10,12,123],[11,12,123],[0,20,122],[1,19,122],[1,19,122]],2092:[[3,8,123],[4,8,123],[5,6,123],[6,6,123],[7,4,123],[8,3,123],[9,2,124],[10,1,124],[10,30,124],[11,30,124],[0,10,123],[1,9,123],[2,10,123]],2093:[[2,28,124],[3,27,124],[4,26,124],[5,25,124],[6,24,124],[7,23,124],[8,21,125],[9,21,125],[10,20,125],[11,20,125],[0,28,124],[1,27,124],[1,27,124]],2094:[[2,18,125],[3,17,125],[4,16,125],[5,15,125],[6,14,125],[7,13,125],[8,11,126],[9,11,126],[10,9,126],[11,8,126],[0,18,125],[1,17,125],[1,17,125]],2095:[[3,5,126],[4,5,126],[5,3,126],[6,3,126],[7,1,126],[7,31,126],[8,29,127],[9,29,127],[10,27,127],[11,27,127],[0,6,126],[1,5,126],[2,7,126]],2096:[[2,24,127],[3,23,127],[4,22,127],[5,21,127],[6,20,127],[7,19,127],[8,17,128],[9,17,128],[10,16,128],[11,16,128],[0,25,127],[1,24,127],[1,24,127]],2097:[[2,14,128],[3,13,128],[4,12,128],[5,11,128],[6,10,128],[7,9,128],[8,7,129],[9,7,129],[10,6,129],[11,6,129],[0,14,128],[1,13,128],[1,13,128]],2098:[[3,3,129],[4,3,129],[5,1,129],[6,1,129],[6,30,129],[7,29,129],[8,27,130],[9,27,130],[10,25,130],[11,24,130],[0,4,129],[1,3,129],[2,5,129]],2099:[[2,22,130],[3,21,130],[4,20,130],[5,19,130],[6,18,130],[7,17,130],[8,15,131],[9,15,131],[10,13,131],[11,13,131],[0,22,130],[1,21,130],[1,21,130]],2100:[[3,10,131],[4,10,131],[5,8,131],[6,8,131],[7,6,131],[8,5,131],null,null,null,null,[0,11,131],[1,10,131],[2,12,131]],months:13,year:5729};class N extends I{constructor(t){super(t),this.calendar=q}get(e){return this.dates.map((s=>{const i=new t(s),n={date:i.toString()+" -0600",start:i.setOffset(-6,"h").toTimezone(e),end:i.toEndDate().toTimezone(e)};return this._addSubstitute(s,n),n}))}}const H={1969:[[2,19,0],[3,18,0],[4,17,0],[5,16,0],[6,15,0],[7,14,0],[8,12,0],[9,12,0],[10,10,0],[11,10,0]],1970:[[2,9,1],[3,8,1],[4,7,1],[5,6,1],[6,5,1],[7,4,1],[8,2,1],[9,2,1],[10,1,1],[10,30,1],[0,8,0,11,30,1],[1,7,0]],1971:[[1,26,2],[2,28,2],[3,26,2],[4,26,2],[5,24,2],[6,24,2],[7,22,2],[8,21,2],[9,20,2],[10,19,2],[11,18,2],[0,28,1]],1972:[[1,16,3],[2,16,3],[3,14,3],[4,14,3],[5,12,3],[6,12,3],[7,10,3],[8,9,3],[9,8,3],[10,7,3],[11,6,3],[0,17,2]],1973:[[1,4,4],[2,6,4],[3,4,4],[4,4,4],[5,2,4],[6,1,4],[6,30,4],[7,29,4],[8,27,4],[9,27,4],[10,25,4],[0,5,3,11,25,4]],1974:[[0,24,5],[1,23,5],[2,24,5],[3,23,5],[4,22,5],[5,21,5],[6,20,5],[7,19,5],[8,17,5],[9,16,5],[10,15,5],[11,15,5]],1975:[[0,13,6],[1,12,6],[2,13,6],[3,12,6],[4,12,6],[5,10,6],[6,10,6],[7,8,6],[8,6,6],[9,6,6],[10,4,6],[11,4,6]],1976:[[0,2,7,11,22,8],[1,1,7],[2,1,7],[2,31,7],[3,30,7],[4,30,7],[5,28,7],[6,28,7],[7,26,7],[8,24,7],[9,24,7],[10,22,7]],1977:[[11,11,9],[0,20,8],[1,19,8],[2,20,8],[3,19,8],[4,19,8],[5,17,8],[6,17,8],[7,15,8],[8,14,8],[9,13,8],[10,12,8]],1978:[[11,1,10],[0,10,9,11,30,10],[1,8,9],[2,10,9],[3,8,9],[4,8,9],[5,6,9],[6,6,9],[7,5,9],[8,3,9],[9,3,9],[10,1,9]],1979:[[10,20,11],[11,20,11],[0,29,10],[1,27,10],[2,29,10],[3,27,10],[4,27,10],[5,25,10],[6,25,10],[7,23,10],[8,22,10],[9,22,10]],1980:[[10,9,12],[11,8,12],[0,19,11],[1,17,11],[2,18,11],[3,16,11],[4,15,11],[5,14,11],[6,13,11],[7,12,11],[8,10,11],[9,10,11]],1981:[[9,28,13],[10,27,13],[0,7,12,11,27,13],[1,5,12],[2,7,12],[3,5,12],[4,5,12],[5,3,12],[6,2,12],[7,1,12],[7,30,12],[8,29,12]],1982:[[9,18,14],[10,16,14],[11,16,14],[0,26,13],[1,24,13],[2,26,13],[3,24,13],[4,24,13],[5,22,13],[6,21,13],[7,20,13],[8,18,13]],1983:[[9,7,15],[10,5,15],[11,5,15],[0,15,14],[1,14,14],[2,15,14],[3,14,14],[4,13,14],[5,12,14],[6,11,14],[7,9,14],[8,8,14]],1984:[[8,26,16],[9,25,16],[10,23,16],[0,4,15,11,23,16],[1,2,15],[2,3,15],[3,2,15],[4,2,15],[4,31,15],[5,30,15],[6,29,15],[7,27,15]],1985:[[8,15,17],[9,15,17],[10,13,17],[11,13,17],[0,22,16],[1,20,16],[2,22,16],[3,21,16],[4,20,16],[5,19,16],[6,18,16],[7,17,16]],1986:[[8,5,18],[9,4,18],[10,3,18],[11,2,18],[0,11,17],[1,10,17],[2,11,17],[3,10,17],[4,9,17],[5,8,17],[6,8,17],[7,6,17]],1987:[[7,25,19],[8,24,19],[9,23,19],[10,22,19],[0,1,18,11,21,19],[0,30,18],[2,1,18],[2,30,18],[3,29,18],[4,28,18],[5,27,18],[6,26,18]],1988:[[7,13,20],[8,12,20],[9,11,20],[10,10,20],[11,10,20],[0,20,19],[1,18,19],[2,19,19],[3,17,19],[4,16,19],[5,15,19],[6,14,19]],1989:[[7,2,21],[8,1,21],[8,30,21],[9,30,21],[10,29,21],[0,8,20,11,29,21],[1,7,20],[2,8,20],[3,7,20],[4,6,20],[5,4,20],[6,4,20]],1990:[[6,23,22],[7,21,22],[8,20,22],[9,19,22],[10,18,22],[11,18,22],[0,27,21],[1,26,21],[2,27,21],[3,26,21],[4,25,21],[5,23,21]],1991:[[6,12,23],[7,11,23],[8,9,23],[9,8,23],[10,7,23],[11,7,23],[0,16,22],[1,15,22],[2,17,22],[3,15,22],[4,15,22],[5,13,22]],1992:[[6,1,24],[6,30,24],[7,29,24],[8,27,24],[9,26,24],[10,25,24],[0,5,23,11,25,24],[1,4,23],[2,5,23],[3,4,23],[4,3,23],[5,2,23]],1993:[[5,21,25],[6,20,25],[7,18,25],[8,17,25],[9,16,25],[10,14,25],[11,14,25],[0,23,24],[1,22,24],[2,24,24],[3,22,24],[4,22,24]],1994:[[5,10,26],[6,9,26],[7,8,26],[8,6,26],[9,6,26],[10,4,26],[11,3,26],[0,12,25],[1,11,25],[2,13,25],[3,12,25],[4,11,25]],1995:[[4,30,27],[5,29,27],[6,28,27],[7,27,27],[8,25,27],[9,25,27],[10,23,27],[0,2,26,11,23,27],[0,31,26],[2,2,26],[3,1,26],[3,30,26]],1996:[[4,18,28],[5,17,28],[6,16,28],[7,15,28],[8,13,28],[9,13,28],[10,12,28],[11,11,28],[0,21,27],[1,19,27],[2,20,27],[3,18,27]],1997:[[4,7,29],[5,6,29],[6,5,29],[7,4,29],[8,2,29],[9,2,29],[10,1,29],[11,1,29],[0,10,28,11,30,29],[1,8,28],[2,10,28],[3,8,28]],1998:[[3,27,30],[4,26,30],[5,25,30],[6,24,30],[7,23,30],[8,21,30],[9,21,30],[10,20,30],[11,19,30],[0,29,29],[1,27,29],[2,29,29]],1999:[[3,17,31],[4,16,31],[5,15,31],[6,14,31],[7,12,31],[8,11,31],[9,10,31],[10,9,31],[11,9,31],[0,18,30],[1,17,30],[2,18,30]],2e3:[[3,6,32],[4,5,32],[5,3,32],[6,3,32],[7,1,32],[7,30,32],[8,28,32],[9,28,32],[10,27,32],[0,8,31,11,27,32],[1,7,31],[2,7,31]],2001:[[2,26,33],[3,25,33],[4,24,33],[5,22,33],[6,22,33],[7,20,33],[8,18,33],[9,17,33],[10,16,33],[11,16,33],[0,26,32],[1,24,32]],2002:[[2,15,34],[3,14,34],[4,13,34],[5,12,34],[6,11,34],[7,10,34],[8,8,34],[9,7,34],[10,6,34],[11,5,34],[0,15,33],[1,13,33]],2003:[[2,4,35],[3,3,35],[4,2,35],[5,1,35],[6,1,35],[6,30,35],[7,29,35],[8,27,35],[9,26,35],[10,25,35],[0,4,34,11,24,35],[1,2,34]],2004:[[1,21,36],[2,22,36],[3,20,36],[4,20,36],[5,19,36],[6,18,36],[7,17,36],[8,15,36],[9,15,36],[10,14,36],[11,13,36],[0,23,35]],2005:[[1,10,37],[2,11,37],[3,10,37],[4,9,37],[5,8,37],[6,7,37],[7,6,37],[8,5,37],[9,4,37],[10,3,37],[11,3,37],[0,12,36]],2006:[[0,31,38],[2,1,38],[2,30,38],[3,29,38],[4,28,38],[5,26,38],[6,26,38],[7,25,38],[8,24,38],[9,23,38],[10,22,38],[0,1,37,11,22,38]],2007:[[0,20,39],[1,19,39],[2,20,39],[3,18,39],[4,18,39],[5,16,39],[6,15,39],[7,14,39],[8,13,39],[9,13,39],[10,11,39],[11,11,39]],2008:[[0,10,40,11,29,41],[1,8,40],[2,9,40],[3,7,40],[4,6,40],[5,5,40],[6,4,40],[7,2,40],[8,1,40],[9,1,40],[9,30,40],[10,29,40]],2009:[[11,18,42],[0,27,41],[1,26,41],[2,28,41],[3,26,41],[4,25,41],[5,24,41],[6,23,41],[7,22,41],[8,20,41],[9,20,41],[10,18,41]],2010:[[11,7,43],[0,16,42],[1,15,42],[2,17,42],[3,15,42],[4,15,42],[5,13,42],[6,13,42],[7,11,42],[8,10,42],[9,9,42],[10,7,42]],2011:[[10,26,44],[0,5,43,11,26,44],[1,4,43],[2,6,43],[3,5,43],[4,4,43],[5,3,43],[6,2,43],[7,1,43],[7,30,43],[8,29,43],[9,28,43]],2012:[[10,15,45],[11,14,45],[0,24,44],[1,23,44],[2,24,44],[3,22,44],[4,22,44],[5,21,44],[6,20,44],[7,19,44],[8,17,44],[9,17,44]],2013:[[10,4,46],[11,4,46],[0,13,45],[1,11,45],[2,13,45],[3,11,45],[4,11,45],[5,10,45],[6,9,45],[7,8,45],[8,7,45],[9,6,45]],2014:[[9,25,47],[10,23,47],[0,2,46,11,23,47],[1,1,46],[2,2,46],[3,1,46],[3,30,46],[4,30,46],[5,28,46],[6,28,46],[7,27,46],[8,25,46]],2015:[[9,14,48],[10,13,48],[11,12,48],[0,21,47],[1,20,47],[2,21,47],[3,20,47],[4,19,47],[5,18,47],[6,17,47],[7,16,47],[8,14,47]],2016:[[9,2,49],[10,1,49],[10,30,49],[0,11,48,11,30,49],[1,10,48],[2,10,48],[3,8,48],[4,8,48],[5,6,48],[6,6,48],[7,4,48],[8,2,48]],2017:[[8,21,50],[9,21,50],[10,19,50],[11,19,50],[0,29,49],[1,28,49],[2,29,49],[3,27,49],[4,27,49],[5,25,49],[6,24,49],[7,23,49]],2018:[[8,11,51],[9,10,51],[10,9,51],[11,8,51],[0,18,50],[1,17,50],[2,18,50],[3,17,50],[4,16,50],[5,15,50],[6,14,50],[7,12,50]],2019:[[7,31,52],[8,30,52],[9,29,52],[10,28,52],[0,7,51,11,27,52],[1,6,51],[2,8,51],[3,6,51],[4,6,51],[5,4,51],[6,4,51],[7,2,51]],2020:[[7,20,53],[8,18,53],[9,18,53],[10,16,53],[11,16,53],[0,26,52],[1,25,52],[2,25,52],[3,24,52],[4,24,52],[5,22,52],[6,22,52]],2021:[[7,9,54],[8,8,54],[9,7,54],[10,6,54],[11,5,54],[0,14,53],[1,13,53],[2,14,53],[3,13,53],[4,13,53],[5,11,53],[6,11,53]],2022:[[6,30,55],[7,28,55],[8,27,55],[9,26,55],[10,25,55],[0,4,54,11,25,55],[1,2,54],[2,4,54],[3,2,54],[4,2,54],[4,31,54],[5,30,54]],2023:[[6,19,56],[7,17,56],[8,16,56],[9,16,56],[10,15,56],[11,14,56],[0,23,55],[1,21,55],[2,23,55],[3,21,55],[4,21,55],[5,19,55]],2024:[[6,7,57],[7,5,57],[8,4,57],[9,4,57],[10,3,57],[11,3,57],[0,13,56],[1,11,56],[2,11,56],[3,10,56],[4,9,56],[5,7,56]],2025:[[5,26,58],[6,26,58],[7,24,58],[8,23,58],[9,23,58],[10,22,58],[0,1,57,11,21,58],[0,31,57],[2,1,57],[2,30,57],[3,29,57],[4,28,57]],2026:[[5,16,59],[6,15,59],[7,14,59],[8,12,59],[9,12,59],[10,11,59],[11,10,59],[0,20,58],[1,18,58],[2,20,58],[3,18,58],[4,18,58]],2027:[[5,6,60],[6,5,60],[7,3,60],[8,2,60],[9,1,60],[9,31,60],[10,29,60],[0,9,59,11,29,60],[1,8,59],[2,9,59],[3,8,59],[4,7,59]],2028:[[4,25,61],[5,24,61],[6,23,61],[7,22,61],[8,20,61],[9,19,61],[10,18,61],[11,17,61],[0,28,60],[1,26,60],[2,27,60],[3,26,60]],2029:[[4,14,62],[5,13,62],[6,13,62],[7,11,62],[8,10,62],[9,9,62],[10,7,62],[11,7,62],[0,16,61],[1,14,61],[2,16,61],[3,15,61]],2030:[[4,3,63],[5,2,63],[6,2,63],[7,1,63],[7,30,63],[8,29,63],[9,28,63],[10,26,63],[0,5,62,11,26,63],[1,4,62],[2,5,62],[3,4,62]],2031:[[3,23,64],[4,22,64],[5,21,64],[6,21,64],[7,20,64],[8,18,64],[9,17,64],[10,16,64],[11,15,64],[0,24,63],[1,23,63],[2,24,63]],2032:[[3,11,65],[4,10,65],[5,9,65],[6,9,65],[7,8,65],[8,6,65],[9,6,65],[10,4,65],[11,4,65],[0,14,64],[1,12,64],[2,13,64]],2033:[[3,1,66],[3,30,66],[4,29,66],[5,28,66],[6,28,66],[7,26,66],[8,25,66],[9,24,66],[10,23,66],[0,2,65,11,23,66],[1,1,65],[2,2,65]],2034:[[2,21,67],[3,20,67],[4,19,67],[5,17,67],[6,17,67],[7,15,67],[8,14,67],[9,13,67],[10,12,67],[11,12,67],[0,21,66],[1,20,66]],2035:[[2,11,68],[3,9,68],[4,9,68],[5,7,68],[6,6,68],[7,5,68],[8,3,68],[9,2,68],[10,1,68],[11,1,68],[0,11,67,11,30,68],[1,9,67]],2036:[[1,28,69],[2,29,69],[3,27,69],[4,27,69],[5,25,69],[6,24,69],[7,23,69],[8,21,69],[9,20,69],[10,19,69],[11,19,69],[0,29,68]],2037:[[1,16,70],[2,18,70],[3,17,70],[4,16,70],[5,15,70],[6,14,70],[7,12,70],[8,11,70],[9,10,70],[10,8,70],[11,8,70],[0,17,69]],2038:[[1,5,71],[2,7,71],[3,6,71],[4,5,71],[5,4,71],[6,3,71],[7,2,71],[7,31,71],[8,30,71],[9,29,71],[10,27,71],[0,7,70,11,27,71]],2039:[[0,26,72],[1,24,72],[2,26,72],[3,24,72],[4,24,72],[5,23,72],[6,22,72],[7,21,72],[8,19,72],[9,19,72],[10,17,72],[11,17,72]],2040:[[0,15,73],[1,14,73],[2,14,73],[3,13,73],[4,12,73],[5,11,73],[6,10,73],[7,9,73],[8,7,73],[9,7,73],[10,6,73],[11,5,73]],2041:[[0,4,74,11,24,75],[1,2,74],[2,4,74],[3,2,74],[4,1,74],[4,31,74],[5,29,74],[6,29,74],[7,28,74],[8,26,74],[9,26,74],[10,25,74]],2042:[[11,14,76],[0,23,75],[1,21,75],[2,23,75],[3,21,75],[4,20,75],[5,19,75],[6,18,75],[7,17,75],[8,15,75],[9,15,75],[10,14,75]],2043:[[11,3,77],[0,12,76],[1,11,76],[2,12,76],[3,11,76],[4,10,76],[5,8,76],[6,8,76],[7,6,76],[8,4,76],[9,4,76],[10,3,76]],2044:[[10,21,78],[0,2,77,11,21,78],[0,31,77],[2,1,77],[2,30,77],[3,29,77],[4,28,77],[5,26,77],[6,26,77],[7,24,77],[8,23,77],[9,22,77]],2045:[[10,10,79],[11,10,79],[0,19,78],[1,18,78],[2,20,78],[3,18,78],[4,18,78],[5,16,78],[6,15,78],[7,14,78],[8,12,78],[9,12,78]],2046:[[9,31,80],[10,29,80],[0,8,79,11,28,80],[1,7,79],[2,9,79],[3,7,79],[4,7,79],[5,5,79],[6,5,79],[7,3,79],[8,2,79],[9,1,79]],2047:[[9,20,81],[10,19,81],[11,18,81],[0,27,80],[1,26,80],[2,27,80],[3,26,80],[4,26,80],[5,24,80],[6,24,80],[7,23,80],[8,21,80]],2048:[[9,9,82],[10,7,82],[11,7,82],[0,16,81],[1,15,81],[2,16,81],[3,14,81],[4,14,81],[5,12,81],[6,12,81],[7,11,81],[8,10,81]],2049:[[8,28,83],[9,28,83],[10,26,83],[0,5,82,11,26,83],[1,3,82],[2,5,82],[3,3,82],[4,3,82],[5,2,82],[6,1,82],[6,31,82],[7,30,82]],2050:[[8,17,84],[9,17,84],[10,15,84],[11,15,84],[0,24,83],[1,23,83],[2,24,83],[3,22,83],[4,22,83],[5,20,83],[6,20,83],[7,19,83]],2051:[[8,6,85],[9,6,85],[10,5,85],[11,4,85],[0,14,84],[1,12,84],[2,14,84],[3,12,84],[4,11,84],[5,10,84],[6,9,84],[7,8,84]],2052:[[7,26,86],[8,24,86],[9,24,86],[10,22,86],[0,3,85,11,22,86],[1,2,85],[2,2,85],[3,1,85],[3,30,85],[4,29,85],[5,28,85],[6,27,85]],2053:[[7,15,87],[8,13,87],[9,13,87],[10,11,87],[11,11,87],[0,21,86],[1,20,86],[2,21,86],[3,20,86],[4,19,86],[5,17,86],[6,17,86]],2054:[[7,5,88],[8,3,88],[9,2,88],[10,1,88],[10,30,88],[0,10,87,11,30,88],[1,9,87],[2,10,87],[3,9,87],[4,9,87],[5,7,87],[6,6,87]],2055:[[6,25,89],[7,24,89],[8,22,89],[9,21,89],[10,20,89],[11,19,89],[0,29,88],[1,27,88],[2,29,88],[3,28,88],[4,28,88],[5,26,88]],2056:[[6,14,90],[7,12,90],[8,11,90],[9,10,90],[10,8,90],[11,8,90],[0,18,89],[1,17,89],[2,17,89],[3,16,89],[4,16,89],[5,14,89]],2057:[[6,3,91],[7,1,91],[7,31,91],[8,30,91],[9,29,91],[10,27,91],[0,6,90,11,27,91],[1,5,90],[2,6,90],[3,5,90],[4,5,90],[5,3,90]],2058:[[5,22,92],[6,21,92],[7,20,92],[8,19,92],[9,18,92],[10,17,92],[11,17,92],[0,25,91],[1,24,91],[2,25,91],[3,24,91],[4,23,91]],2059:[[5,11,93],[6,11,93],[7,9,93],[8,8,93],[9,8,93],[10,6,93],[11,6,93],[0,15,92],[1,14,92],[2,15,92],[3,13,92],[4,13,92]],2060:[[4,31,94],[5,29,94],[6,28,94],[7,27,94],[8,26,94],[9,25,94],[10,24,94],[0,5,93,11,24,94],[1,3,93],[2,4,93],[3,2,93],[4,1,93]],2061:[[4,20,95],[5,19,95],[6,18,95],[7,16,95],[8,15,95],[9,15,95],[10,13,95],[11,13,95],[0,23,94],[1,21,94],[2,23,94],[3,21,94]],2062:[[4,10,96],[5,8,96],[6,8,96],[7,6,96],[8,4,96],[9,4,96],[10,3,96],[11,2,96],[0,12,95],[1,10,95],[2,12,95],[3,11,95]],2063:[[3,30,97],[4,29,97],[5,27,97],[6,27,97],[7,25,97],[8,24,97],[9,23,97],[10,22,97],[0,1,96,11,21,97],[0,31,96],[2,1,96],[2,31,96]],2064:[[3,18,98],[4,17,98],[5,16,98],[6,15,98],[7,14,98],[8,12,98],[9,12,98],[10,10,98],[11,9,98],[0,20,97],[1,18,97],[2,19,97]],2065:[[3,7,99],[4,6,99],[5,5,99],[6,5,99],[7,3,99],[8,2,99],[9,1,99],[9,31,99],[10,29,99],[0,8,98,11,28,99],[1,6,98],[2,8,98]],2066:[[2,27,100],[3,25,100],[4,25,100],[5,24,100],[6,24,100],[7,22,100],[8,21,100],[9,20,100],[10,19,100],[11,18,100],[0,27,99],[1,25,99]],2067:[[2,16,101],[3,15,101],[4,14,101],[5,13,101],[6,13,101],[7,11,101],[8,10,101],[9,10,101],[10,8,101],[11,8,101],[0,16,100],[1,15,100]],2068:[[2,5,102],[3,3,102],[4,3,102],[5,1,102],[6,1,102],[6,30,102],[7,29,102],[8,28,102],[9,27,102],[10,26,102],[0,6,101,11,25,102],[1,4,101]],2069:[[1,23,103],[2,24,103],[3,22,103],[4,22,103],[5,20,103],[6,20,103],[7,18,103],[8,17,103],[9,16,103],[10,15,103],[11,15,103],[0,24,102]],2070:[[1,12,104],[2,14,104],[3,12,104],[4,11,104],[5,10,104],[6,9,104],[7,8,104],[8,6,104],[9,5,104],[10,4,104],[11,4,104],[0,13,103]],2071:[[1,1,105],[2,3,105],[3,2,105],[4,1,105],[4,30,105],[5,29,105],[6,28,105],[7,26,105],[8,25,105],[9,24,105],[10,23,105],[0,2,104,11,22,105]],2072:[[0,21,106],[1,20,106],[2,21,106],[3,19,106],[4,19,106],[5,17,106],[6,17,106],[7,15,106],[8,13,106],[9,13,106],[10,11,106],[11,11,106]],2073:[[0,9,107,11,30,108],[1,8,107],[2,10,107],[3,9,107],[4,8,107],[5,7,107],[6,6,107],[7,5,107],[8,3,107],[9,2,107],[10,1,107],[10,30,107]],2074:[[11,19,109],[0,28,108],[1,27,108],[2,29,108],[3,27,108],[4,27,108],[5,26,108],[6,25,108],[7,23,108],[8,22,108],[9,21,108],[10,20,108]],2075:[[11,9,110],[0,18,109],[1,16,109],[2,18,109],[3,16,109],[4,16,109],[5,15,109],[6,14,109],[7,13,109],[8,11,109],[9,11,109],[10,9,109]],2076:[[10,27,111],[0,7,110,11,27,111],[1,6,110],[2,6,110],[3,5,110],[4,4,110],[5,3,110],[6,2,110],[7,1,110],[7,30,110],[8,29,110],[9,29,110]],2077:[null,null,[0,26,111],[1,24,111],[2,25,111],[3,24,111],[4,23,111],[5,21,111],[6,21,111],[7,19,111],[8,18,111],[9,18,111]],year:1389};class C extends I{constructor(t){super(t),this.calendar=H}get(e){return this.dates.map((s=>{const i=new t(s),n={date:i.toString()+" -0600",start:i.setOffset(-6,"h").toTimezone(e),end:i.toEndDate().toTimezone(e)};return this._addSubstitute(s,n),n}))}}const{toJalaali:J,toGregorian:F}=d;class B extends T{inYear(e){const s=J(e,1,1);if(this.opts.year&&s.jy!==this.opts.year)return this;const{gy:i,gm:n,gd:r}=F(this.opts.year||s.jy,this.opts.month,this.opts.day),a=new t({year:i,month:n,day:r}).setOffset(this.offset);return this.dates.push(a),this}}const G=i,V=new r.Planet(G);class W extends T{constructor(t){super(t=t||{}),this._season=t.season,this._timezone=t.timezone||"GMT"}inYear(e){let i;switch(this._season){case"march":i=n.march2(e,V);break;case"june":i=n.june2(e,V);break;case"september":i=n.september2(e,V);break;case"december":i=n.december2(e,V)}const r=(new s.Calendar).fromJDE(i).toDate().toISOString();let a;a=/^[+-]\d{2}:\d{2}?$/.test(this._timezone)?l(r).utcOffset(this._timezone):l(r).tz(this._timezone);const o={year:e,month:a.month()+1,day:a.date()},h=new t(o).setOffset(this.offset);return this.dates.push(h),this}}class $ extends T{constructor(t){switch(super(t=t||{}),t.fn){case"chinese":this.cal=new h;break;case"korean":this.cal=new o;break;case"vietnamese":this.cal=new a}}inYear(e){let s,i,n;const r=this.opts;return r.solarterm?(i=this.cal.solarTerm(r.solarterm,e),n=this.cal.fromJDE(i).toGregorian(),s=new t(n).setOffset(r.day-1)):(this.cal.set(r.cycle,r.year,r.month,r.leapMonth,r.day),i=this.cal.toJDE(e),n=this.cal.fromJDE(i).toGregorian(),s=new t(n)),this.dates.push(s),this}}class K extends T{constructor(t){super(t=t||{})}inYear(e){const s=this.opts,i=new u(e-593,s.month,s.day).toGregorian(),n=new t(i);return this.dates.push(n),this}}class P{constructor(t){switch(t.fn){case"easter":return new Y(t);case"julian":return new R(t);case"hebrew":return new N(t);case"islamic":return new C(t);case"jalaali":return new B(t);case"equinox":return new W(t);case"chinese":case"korean":case"vietnamese":return new $(t);case"bengali-revised":return new K(t);default:return new T(t)}}}class U{constructor(t,e){const s=new S;this.ruleStr=t,this.rules=s.parse(t),this.ok=!s.error,this.holidays=e,this.opts=e?e[t]:{},this.event=void 0,this.cache=new Map}inYear(t){if(this.cache.has(t))return this.event=this.cache.get(t),this;let e;const s=new z(this.ruleStr,this.opts,this.holidays);this.rules.forEach((i=>{if(i.fn){const n=new P(i).inYear(t-1).inYear(t).inYear(t+1);s.push(n),e=new O(n)}else e.resolve(i)&&s.resolve(i,t)}));const i=s.getEvent(t);return this.cache.set(t,i),this.event=i,this}get(t){return this.event.get(t)}}class Q{constructor(t){const{rule:e,fn:s,opts:i,...n}=t;Object.assign(this,{rule:e,...n})}disableIn(t,e){if(!v(t))return;const s=[t,e=e<1&&e>12?void 0:e<10?"0"+Number(e):e].filter(Boolean).join("-");this.disable=(this.disable||[]).concat(s).sort()}}
/**
 * @copyright 2016- (c) commenthol
 * @license ISC
 */const X=["observance","optional","school","bank","public"];let Z=class{constructor(t,e,s,i,n){if(!t)throw new TypeError("need holiday data");this._data=t,this.init(e,s,i,n)}init(...t){const[e,s,i,n]=function(t,e,s,i){"object"==typeof s?(i=s,s=null):"object"==typeof e?(i=e,e=null):"object"!=typeof t||t.country||(i=t);return i=i||{},[t,e,s,i]}(...t);this.__conf=null,this.__types=n.types&&n.types.length?n.types:X,this.holidays={},this.setLanguages(),this.__conf=k.splitName(e,s,i),this.__data=new k(n.data||this._data,this.__conf),n.languages?this.setLanguages(n.languages):this.setLanguages(this.__data.getLanguages(this.__conf));const r=this.__data.getRules();if(r)return this.__timezone=n.timezone||this.__data.getTimezones()[0],Object.keys(r).forEach((t=>{this.setHoliday(t,r[t])})),!0}setHoliday(t,e){if(!1===e)return!!this.holidays[t]&&(this.holidays[t]=!1,!0);if(!e||"string"==typeof e){e=e||t;const s=this.getLanguages()[0];e=y({type:"public"},["name",s],e)}if(e.active){if(!Array.isArray(e.active))throw TypeError(".active is not of type Array: "+t);e.active=e.active.map((e=>{const s=w(e.from),i=w(e.to);if(!s&&!i)throw TypeError(".active needs .from or .to property: "+t);return{from:s,to:i}}))}if(!this.__types.includes(e.type))return!1;this.holidays[t]=e;const s=new U(t,this.holidays);return s.ok?(this.holidays[t].fn=s,!0):(console.error("could not parse rule: "+t),!1)}getHolidays(t,e){t=function(t){return t?t instanceof Date?t=t.getFullYear():"string"==typeof t&&(t=v(t)):t=(new Date).getFullYear(),t}(t);const s=this.getLanguages();e&&s.unshift(e);const i=t=>this.__types.indexOf(t.type),n=t=>/substitutes|and if /.test(t.rule)?1:0,r=t=>String(t.rule||"").length,a={};return Object.keys(this.holidays).reduce(((e,i)=>(this.holidays[i].fn&&this._dateByRule(t,i).forEach((t=>{e.push({...this._translate(t,s),rule:i})})),e)),[]).sort(((t,e)=>((t,e)=>+t.start-+e.start)(t,e)||((t,e)=>i(e)-i(t))(t,e)||((t,e)=>n(t)-n(e)||r(t)-r(e))(t,e))).filter((t=>{const e=t.name+ +t.start;return!a[e]&&(a[e]=!0,!0)}))}isHoliday(e){e=e?new Date(e):new Date;const s=new t;s.fromTimezone(e,this.__timezone);const i=s.year,n=Object.keys(this.holidays),r=[];for(const t of n){const s=[].concat(this._dateByRule(i,t));for(const t of s)t&&e>=t.start&&e<t.end&&r.push(this._translate(t))}return!!r.length&&r}setRule(t){const{rule:e,...s}=t;return this.setHoliday(e,s)}unsetRule(t){return this.setHoliday(t,!1)}getRules(){return Object.entries(this.holidays).map((([t,e])=>new Q({...e,rule:t})))}getRule(t){if(this.holidays[t])return new Q({...this.holidays[t],rule:t})}query(t,e,s){const i=k.splitName(t,e);return i&&i.country?i.state?this.getRegions(i.country,i.state,s):this.getStates(i.country,s):this.getCountries(s)}getCountries(t){return this.__data.getCountries(t)}getStates(t,e){return this.__data.getStates(t,e)}getRegions(t,e,s){return this.__data.getRegions(t,e,s)}setTimezone(t){this.__timezone=t}getTimezones(){if(this.__data)return this.__data.getTimezones()}setLanguages(t){"string"==typeof t&&(t=[t]);const e={};this.__languages=[].concat(t,this.__conf?this.__data.getLanguages(this.__conf):[],"en").filter((function(t){return!(!t||e[t])&&(e[t]=1,!0)}))}getLanguages(){return this.__languages}getDayOff(){if(this.__conf)return this.__data.getDayOff()}_dateByRule(t,e){const s=this.holidays[e];if(!s||!s.fn||!s.fn.inYear)return[];return s.fn.inYear(t).get(this.__timezone).map((t=>{const e=m({},p(t,["substitute"]),p(s,["fn","enable","disable","substitute","active"]));return s.substitute&&t.substitute&&(e.substitute=!0),e}))}_translate(t,e){if(t&&"object"==typeof t.name){e=e||this.getLanguages();for(const s of e){const e=t.name[s];if(e){t.name=e;break}}if(t.substitute)for(const s of e){const e=this.__data.getSubstitueNames()[s];if(e){t.name+=" ("+e+")";break}}}return t}};export{Z as H};
